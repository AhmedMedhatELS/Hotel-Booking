@model Models.ViewModel.HomeView

@{
    ViewData["Title"] = "Home";
}

<div class="search-banner d-flex align-items-center p-1">
    <img src="~/favicon.png" alt="Banner Image" class="me-3" style="width: 100px; height: auto;">
    <div>
        <h1 class="display-4" style="color:#3C3D37;">Find Your Next Stay</h1>
        <p class="lead">Explore great deals on hotels, homes, and more, all at the best prices.</p>
    </div>
</div>

<div class="container mt-1">
    <!-- Search Form (optional) -->
    <form id="searchForm" method="post" asp-action="FilterHome" onsubmit="return validateForm()">
        <div class="row mb-3 p-3 border rounded card-header bg-dark text-white">
            <!-- Destination (States) -->
            <div class="col-md-4">
                <label for="StateId" class="form-label">Where are you going?</label>
                <select class="form-select" id="StateId" name="StateId">
                    <option value="" selected>Select State</option>
                    @{
                        foreach (var state in Model.States)
                        {
                            if (state.StateId == (Model.HomeFiltrationView?.StateId ?? 0))
                            {
                                <option selected value="@state.StateId">@state.Country.Name, @state.Name</option>
                            }
                            else
                            {
                                <option value="@state.StateId">@state.Country.Name, @state.Name</option>
                            }
                        }
                    }
                </select>
            </div>

            <!-- Check-in and Check-out Dates -->
            <div class="col-md-4">
                <label for="CheckInDate" class="form-label">Check-in date</label>
                <input 
                    type="date" class="form-control" id="CheckInDate" name="CheckInDate"
                       value="@Model.HomeFiltrationView?.CheckInDate?.ToString("yyyy-MM-dd")">
            </div>

            <div class="col-md-4 d-flex align-items-end">
                <div class="w-100 d-flex gap-2">
                    <div class="flex-grow-1">
                        <label for="CheckOutDate" class="form-label">Check-out date</label>
                        <input 
                            type="date" class="form-control" id="CheckOutDate" name="CheckOutDate"
                               value="@Model.HomeFiltrationView?.CheckOutDate?.ToString("yyyy-MM-dd")">
                    </div>
                    <button type="submit" class="btn btn-primary align-self-end">Search</button>
                </div>
            </div>
        </div>
    </form>

    <!-- Hotel Results (Grid Layout) -->
    <div class="row">
        @{
            foreach (var hotel in Model.HotelHomeViews)
            {
                <div class="col-md-6 mb-4">
                    <div class="card h-100 d-flex flex-row align-items-center">
                        <!-- Hotel Image (Link) -->
                        <a asp-action="Hotel" asp-route-HotelId="@hotel.HotelId"
                           asp-route-CheckInDate="@Model.HomeFiltrationView?.CheckInDate"
                           asp-route-CheckOutDate="@Model.HomeFiltrationView?.CheckOutDate"
                           class="h-100 flex-shrink-0">
                            <img src="~/images/Hotels/@hotel.HotelImage" class="card-img-left" style="width:150px; height:150px; object-fit: cover;" alt="Hotel Image">
                        </a>
                        <!-- Hotel Details -->
                        <div class="card-body">
                            <h5 class="card-title">
                                <a asp-action="Hotel" asp-route-HotelId="@hotel.HotelId"
                                   asp-route-CheckInDate="@Model.HomeFiltrationView?.CheckInDate"
                                   asp-route-CheckOutDate="@Model.HomeFiltrationView?.CheckOutDate"
                                   class="text-dark text-decoration-none">
                                    @hotel.HotelName
                                </a>
                            </h5>
                            <p class="text-muted mb-1">@hotel.HotelState</p>
                            <span class="badge bg-primary mb-2">@hotel.HotelRating</span>
                            <p class="mb-0"><strong>From</strong> <span class="text-primary">USD @hotel.HotelStartPrice</span></p>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<!-- Hover Effect for Images -->
<style>
    .card-img-left {
        transition: transform 0.3s ease;
    }

        .card-img-left:hover {
            transform: scale(1.1); /* Enlarge image on hover */
        }

    .card {
        border: none;
    }

    .card-body a {
        text-decoration: none;
        color: #000;
    }

        .card-body a:hover {
            color: #007bff; /* Change color on hover */
        }

    .search-banner {
        margin-bottom: 0px;
        border-radius: 0px;
    }

        .search-banner h1 {
            font-weight: 700;
        }

        .search-banner p {
            color: #604CC3;
            font-weight: 400;
            font-size: 1.2rem;
        }
</style>

<!-- JavaScript to Handle Date Logic -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get today's date in YYYY-MM-DD format
        let today = new Date().toISOString().split('T')[0];

        // Set the minimum date for check-in
        let CheckInDate = document.getElementById("CheckInDate");
        let CheckOutDate = document.getElementById("CheckOutDate");
        CheckInDate.setAttribute("min", today);

        // Prevent selecting a check-out date earlier than the check-in date
        CheckInDate.addEventListener("change", function () {
            let CheckInDateDate = this.value;
            CheckOutDate.setAttribute("min", CheckInDateDate);

            // If check-out date is set and it's earlier than the new check-in date, reset check-out date
            if (CheckOutDate.value && CheckOutDate.value < CheckInDateDate) {
                CheckOutDate.value = "";
                CheckOutDate.setAttribute("placeholder", "Select check-out date");
            }
        });

        // Compare check-in and check-out dates if both are selected
        CheckOutDate.addEventListener("change", function () {
            let CheckInDateDate = CheckInDate.value;
            let CheckOutDateDate = CheckOutDate.value;

            if (CheckInDateDate && CheckOutDateDate && CheckOutDateDate < CheckInDateDate) {
                alert("Check-out date must be later than check-in date.");
                CheckOutDate.value = ""; // Reset the check-out date if invalid
            }
        });
    });
    function validateForm() {
        const stateId = document.getElementById('StateId').value;
        const CheckInDate = document.getElementById('CheckInDate').value;
        const CheckOutDate = document.getElementById('CheckOutDate').value;

        // Check if the user has selected a state or entered dates
        if (!stateId && (!CheckInDate || !CheckOutDate)) {
            alert('Please select a state or enter check-in and check-out dates.');
            return false; // Prevent form submission
        }

        if (CheckInDate && !CheckOutDate || !CheckInDate && CheckOutDate) {
            alert('Please enter both check-in and check-out dates.');
            return false; // Prevent form submission
        }

        return true; // Allow form submission
    }
</script>